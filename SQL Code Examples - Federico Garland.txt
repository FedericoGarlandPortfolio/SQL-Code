SQL File Contents



---  Positivos + Negativos - Con AnÃ¡lisis  ---
DECLARE @FechaCOAInicio DATE;
DECLARE @FechaCOAFinal DATE;
DECLARE @Cliente VARCHAR(5);

SET @FechaCOAInicio = '2024-01-01';
SET @FechaCOAFinal = '2024-12-31';
SET @Cliente = 'Customer';

WITH COA AS (SELECT
s.TEXT_ID, 
MIN(CONVERT(DATE, x.REPORTED_DATE)) AS [Fecha Informe]
FROM SAMPLE s LEFT JOIN X_REPORT x
ON s.SAMPLE_NUMBER = x.SAMPLE_NUMBER 
WHERE s.CUSTOMER = @Cliente
GROUP BY s.TEXT_ID
HAVING MIN(CONVERT(DATE, x.REPORTED_DATE)) > @FechaCOAInicio), -- Obtener la primera fecha COA para cada muestra 


MUESTRAS AS (SELECT
c.[Fecha Informe],
CONVERT(DATE, s.SAMPLED_DATE) AS [Fecha de Muestreo],
s.SAMPLING_POINT AS Matriz,
s.DESCRIPTION AS [Descripción de Matriz],
s.PRODUCT_GRADE AS Condición,
s.TEXT_ID AS [Número de Informe],
s.X_CLAVE_CLIENTE AS Proveedor,
ISNULL(ISNULL(s.C_TURNO_CODIGO, s.C_TURNO_NOMBRE), s.C_PARCELA_NOMBRE) AS [Lote/Filtrado/Modulo/Turno],
' ' AS [Fundo/Pozo],
s.C_CUARTEL AS Zona,
s.C_OBS_OUT AS Observacion, 
' ' AS Servicio, 
' ' AS Precio,
CASE 
WHEN s.LAB = 'Lab A' THEN 'PESTICIDES' 
WHEN s.LAB = 'Lab B' THEN 'METALS' 
ELSE NULL 
END AS [Tipo servicio], 
t.ANALYSIS AS Analisis, 
t.TEST_NUMBER
FROM  SAMPLE s
LEFT JOIN COA c 
ON s.TEXT_ID = c.TEXT_ID
LEFT JOIN TEST t 
ON t.SAMPLE_NUMBER= s.SAMPLE_NUMBER
WHERE s.CUSTOMER = @Cliente
AND c.[Fecha Informe] >= @FechaCOAInicio
AND c.[Fecha Informe] <= @FechaCOAFinal
AND s.LAB IN ('Lab A', 'Lab B')),



POSITIVOS AS (SELECT
c.[Fecha Informe],
CONVERT(DATE, s.SAMPLED_DATE) AS [Fecha de Muestreo],
s.SAMPLING_POINT AS Matriz,
s.DESCRIPTION AS [Descripción de Matriz],
s.PRODUCT_GRADE AS Condición,
s.TEXT_ID AS [Número de Informe],
s.X_CLAVE_CLIENTE AS Proveedor,
ISNULL(ISNULL(s.C_TURNO_CODIGO, s.C_TURNO_NOMBRE), s.C_PARCELA_NOMBRE) AS [Lote/Filtrado/Modulo/Turno],
' ' AS [Fundo/Pozo],
s.C_CUARTEL AS Zona,
s.C_OBS_OUT AS Observacion, 
' ' AS Servicio, 
' ' AS Precio,
CASE 
WHEN s.LAB = 'Lab A' THEN 'PESTICIDAS' 
WHEN s.LAB = 'Lab B' THEN 'METALES' 
ELSE NULL 
END AS [Tipo servicio],
t.ANALYSIS AS Analisis, 
t.TEST_NUMBER,
r.REPORTED_NAME AS [Parámetro analizado], 
TRY_CAST(r.FORMATTED_ENTRY AS DECIMAL(10, 9)) AS Resultado
FROM RESULT r LEFT JOIN SAMPLE s
ON r.SAMPLE_NUMBER = s.SAMPLE_NUMBER
LEFT JOIN COA c 
ON s.TEXT_ID = c.TEXT_ID
LEFT JOIN TEST t 
ON t.TEST_NUMBER = r.TEST_NUMBER
WHERE s.CUSTOMER = @Cliente
AND c.[Fecha Informe] >= @FechaCOAInicio
AND c.[Fecha Informe] <= @FechaCOAFinal
AND r.FORMATTED_ENTRY NOT LIKE '%<%'
AND r.REPORTABLE = 'T'
AND s.LAB IN ('Lab A', 'Lab B')), 


RESULTADOS AS (SELECT
s.*, 
p.[Parámetro analizado],
p.Resultado
FROM MUESTRAS s LEFT JOIN POSITIVOS p 
ON s.[Número de Informe] = p.[Número de Informe] AND s.Analisis = p.Analisis),



TRAZAS_BASE AS (SELECT
r.SAMPLE_NUMBER,
s.TEXT_ID,
r.REPORTED_NAME,
TRY_CAST(REPLACE(r.ENTRY, '<', '') AS DECIMAL(9, 6)) AS RESULTADO,
r.ENTRY,
r.FORMATTED_ENTRY,
TRY_CAST(r.NUMERIC_ENTRY AS DECIMAL(9, 6)) AS NUMERIC_ENTRY_
FROM RESULT r INNER JOIN SAMPLE s
ON r.SAMPLE_NUMBER = s.SAMPLE_NUMBER
LEFT JOIN COA c 
ON s.TEXT_ID = c.TEXT_ID
WHERE r.REPORTABLE = 'T'
AND r.RESULT_TYPE = 'N'
AND c.[Fecha Informe] >= @FechaCOAInicio
AND c.[Fecha Informe] <= @FechaCOAFinal
AND s.CUSTOMER = @Cliente
AND s.LAB IN ('Lab A', 'Lab B')
AND ENTRY IS NOT NULL),

TRAZAS_2 AS (SELECT
*
FROM TRAZAS_BASE
WHERE RESULTADO < NUMERIC_ENTRY_
AND RESULTADO <> 0),

TRAZAS_FINAL AS (
    SELECT
        TEXT_ID,
        STRING_AGG(REPORTED_NAME + ' (' + CONVERT(VARCHAR, RESULTADO) + ')', ', ') WITHIN GROUP (ORDER BY REPORTED_NAME ASC) AS Trazas
    FROM TRAZAS_2
    GROUP BY TEXT_ID
),

LMR AS (SELECT
r.C_REG_HEADER AS Pais, 
r.C_COMMODITY AS Matriz_ENG, 
r.COMPONENT AS Molecula_ENG, 
c.PE_DESCRIPTION AS Molecula_PE, 
m.PE_DESCRIPTION AS Matriz_PE,
r.MAX_VALUE AS LMR
FROM C_REG_DETAIL r LEFT JOIN C_COMPONENT c
ON r.COMPONENT = c.COMP_NAME 
LEFT JOIN C_COMMODITY m 
ON m.DESCRIPTION = r.C_COMMODITY
WHERE r.MAX_VALUE IS NOT NULL), 




FINAL AS (
SELECT 
    r.*, 
    tr.Trazas, 
		CASE WHEN r.[Tipo servicio] = 'METALES' OR r.[Parámetro analizado] IS NULL THEN '-' ELSE ISNULL((SELECT LMR FROM LMR WHERE Matriz_PE = r.Matriz AND Molecula_PE = r.[Parámetro analizado] AND Pais = 'United States'), 0) END AS [LMR USA],
		CASE WHEN r.[Tipo servicio] = 'METALES' OR r.[Parámetro analizado] IS NULL THEN '-' ELSE ISNULL((SELECT LMR FROM LMR WHERE Matriz_PE = r.Matriz AND Molecula_PE = r.[Parámetro analizado] AND Pais = 'European Union'), 0.01) END AS [LMR Europa],
		CASE WHEN r.[Tipo servicio] = 'METALES' OR r.[Parámetro analizado] IS NULL THEN '-' ELSE ISNULL((SELECT LMR FROM LMR WHERE Matriz_PE = r.Matriz AND Molecula_PE = r.[Parámetro analizado] AND Pais = 'China'), 0) END AS [LMR China],
		CASE WHEN r.[Tipo servicio] = 'METALES' OR r.[Parámetro analizado] IS NULL THEN '-' ELSE ISNULL((SELECT LMR FROM LMR WHERE Matriz_PE = r.Matriz AND Molecula_PE = r.[Parámetro analizado] AND Pais = 'Canada'), 0.1) END AS [LMR Canada],
		CASE WHEN r.[Tipo servicio] = 'METALES' OR r.[Parámetro analizado] IS NULL THEN '-' ELSE ISNULL((SELECT LMR FROM LMR WHERE Matriz_PE = r.Matriz AND Molecula_PE = r.[Parámetro analizado] AND Pais = 'Korea'), 0.01) END AS [LMR Korea],
		CASE WHEN r.[Tipo servicio] = 'METALES' OR r.[Parámetro analizado] IS NULL THEN '-' ELSE ISNULL((SELECT LMR FROM LMR WHERE Matriz_PE = r.Matriz AND Molecula_PE = r.[Parámetro analizado] AND Pais = 'Japan'), 0.01) END AS [LMR Japón],
		CASE WHEN r.[Tipo servicio] = 'METALES' OR r.[Parámetro analizado] IS NULL THEN '-' ELSE ISNULL((SELECT LMR FROM LMR WHERE Matriz_PE = r.Matriz AND Molecula_PE = r.[Parámetro analizado] AND Pais = 'Chile'), 0.01) END AS [LMR Chile],
    ROW_NUMBER() OVER (PARTITION BY [Número de Informe] ORDER BY [Número de Informe] ASC) AS Fila
FROM 
    RESULTADOS r 
LEFT JOIN 
    TRAZAS_FINAL tr ON r.[Número de Informe] = tr.TEXT_ID)

SELECT
*
FROM FINAL
ORDER BY [Número de Informe] ASC



---  Query - Results Lab B Daily Report  ---
DECLARE @FechaDiaAnterior DATE;
SET @FechaDiaAnterior = (SELECT CONVERT(DATE, GETDATE()-1)); -- Retorna la fecha del día anterior, se usara para filtrar resultados emitidos ayer 

WITH COA AS (SELECT
s.TEXT_ID, 
MIN(CONVERT(DATE, x.REPORTED_DATE)) AS FechaCOA
FROM SAMPLE s LEFT JOIN X_REPORT x
ON s.SAMPLE_NUMBER = x.SAMPLE_NUMBER 
GROUP BY s.TEXT_ID) -- Obtener la primera fecha COA para cada muestra 

SELECT
c.FechaCOA AS [Fecha Informe],
CONVERT(DATE, s.SAMPLED_DATE) AS [Fecha de Muestreo],
CASE 
	WHEN s.C_OBS_OUT IS NOT NULL THEN SUBSTRING(s.C_OBS_OUT, CHARINDEX('SHIPPING DATE:', LOWER(s.C_OBS_OUT)) + LEN('SHIPPING DATE:'), 12)
	ELSE SUBSTRING(s.X_CLAVE_CLIENTE, CHARINDEX('SHIPPING DATE:', LOWER(s.X_CLAVE_CLIENTE)) + LEN('SHIPPING DATE:'), 12)
	END AS [Fecha Envio], -- Extraer la fecha de envío que está dentro de un texto tras las palabras "Shipping Date"
s.SAMPLING_POINT AS Matriz,
s.DESCRIPTION AS [Descripción de Matriz],
s.PRODUCT_GRADE AS Condición,
s.TEXT_ID AS [Número de Informe],
s.X_CLAVE_CLIENTE AS Proveedor,
ISNULL(ISNULL(s.C_TURNO_CODIGO, s.C_TURNO_NOMBRE), s.C_PARCELA_NOMBRE) AS [Lote/Filtrado/Modulo/Turno],
s.C_CUARTEL AS Zona,
s.C_OBS_OUT AS Observacion, 
CASE 
	WHEN s.LAB = 'Lab A' THEN 'PESTICIDAS' 
	WHEN s.LAB = 'Lab B' THEN 'METALES' 
	ELSE NULL 
	END AS [Tipo servicio],
r.REPORTED_NAME AS [Parámetro analizado], 
r.FORMATTED_ENTRY AS Resultado
FROM RESULT r INNER JOIN SAMPLE s
ON r.SAMPLE_NUMBER = s.SAMPLE_NUMBER
LEFT JOIN COA c 
ON s.TEXT_ID = c.TEXT_ID
WHERE s.CUSTOMER = 'Customer'
AND r.REPORTABLE = 'T'
AND s.LAB = 'Lab B'
AND c.FechaCOA = @FechaDiaAnterior
ORDER BY s.TEXT_ID ASC






---  Query Clientes  ---
WITH BASE AS (SELECT
DISTINCT(s.CUSTOMER) AS Codigo,
c.COMPANY_NAME AS Cliente,
c.c_atiende_sabado AS [Sabado Habil],
CONCAT('C',c.X_CUSTOMER_CIF) AS RUC
FROM SAMPLE s LEFT JOIN CUSTOMER c
ON s.CUSTOMER = c.NAME),


PAISES AS (SELECT
X_CUSTOMER_PAIS AS Pais, 
COMPANY_NAME AS Cliente, 
NAME AS Codigo,
X_CUSTOMER_PROVINCIA AS Region, 
CASE
WHEN X_CUSTOMER_PAIS IN ('PE', 'PERÚ', 'PERU') THEN 'PERÚ'
WHEN X_CUSTOMER_PAIS IN ('MEXICO', 'MÉXICO') THEN 'MÉXICO'
WHEN X_CUSTOMER_PAIS = 'EC' THEN 'ECUADOR' 
WHEN X_CUSTOMER_PAIS = 'PY' THEN 'PARAGUAY'
WHEN X_CUSTOMER_PAIS = 'BO' THEN 'BOLIVIA'
WHEN X_CUSTOMER_PAIS = 'CO' THEN 'COLOMBIA'
WHEN X_CUSTOMER_PAIS = 'BE' THEN 'BÉLGICA'
WHEN X_CUSTOMER_PAIS = 'CL' THEN 'CHILE'
WHEN X_CUSTOMER_PAIS = 'IN' THEN 'INDIA'
WHEN X_CUSTOMER_PAIS = 'BO' THEN 'BOLIVIA'
WHEN X_CUSTOMER_PAIS = 'FR' THEN 'FRANCIA'
WHEN X_CUSTOMER_PAIS = 'GT' THEN 'GUATEMALA'
ELSE X_CUSTOMER_PAIS
END AS PaisClean
FROM CUSTOMER), 


FINAL AS (SELECT
b.Codigo AS [Cod. Cliente], 
b.Cliente AS Cliente, 
p.Region AS Region,
p.PaisClean AS Pais, 
b.RUC AS RUC,
b.[Sabado Habil],
ROW_NUMBER() OVER (PARTITION BY b.Codigo ORDER BY p.Region DESC) AS RowNum
FROM BASE b LEFT JOIN PAISES p 
ON b.Cliente = p.Cliente)

SELECT
[Cod. Cliente], 
Cliente, 
Region, 
Pais, 
RUC, 
[Sabado Habil]
FROM FINAL 
WHERE RowNum = 1 -- Eliminamos duplicados

---  Query Combinaciones de Metales - Paquetizacion  ---
WITH COMBINACIONES AS (SELECT
s.SAMPLE_NUMBER, 
STRING_AGG(r.REPORTED_NAME, ', ') WITHIN GROUP (ORDER BY r.REPORTED_NAME ASC) AS Combinaciones
FROM RESULT r INNER JOIN TEST t 
ON r.TEST_NUMBER = t.TEST_NUMBER
INNER JOIN SAMPLE s
ON s.SAMPLE_NUMBER = t.SAMPLE_NUMBER
WHERE t.LAB LIKE '%METAL%'
AND r.REPORTABLE = 'T'
AND s.RECD_DATE >= '2023-10-01'
AND s.CUSTOMER <> 'Internal ID'
AND s.CUSTOMER IN (SELECT NAME FROM CUSTOMER WHERE COMPANY_NAME LIKE '%Customer 2%')
AND t.STATUS <> 'X'
GROUP BY s.SAMPLE_NUMBER)

SELECT
Combinaciones, 
COUNT(DISTINCT(SAMPLE_NUMBER)) AS Muestras
FROM COMBINACIONES 
GROUP BY Combinaciones
ORDER BY COUNT(DISTINCT(SAMPLE_NUMBER)) DESC



---  Query Links Reportes COA  ---
WITH COA_PRINCIPAL_BASE AS (
SELECT
s.TEXT_ID, 
x.FILENAME, 
x.REPORTED_DATE, 
ROW_NUMBER() OVER (PARTITION BY s.TEXT_ID ORDER BY x.REPORTED_DATE DESC) AS Rows
FROM X_REPORT x INNER JOIN SAMPLE s 
ON x.SAMPLE_NUMBER = s.SAMPLE_NUMBER
WHERE x.FILENAME NOT LIKE '%AnTr%'
AND x.FILENAME NOT LIKE '%AnLMR%' 
AND x.FILENAME NOT LIKE '%AnARFD%'),

COA_PRINCIPAL AS (
SELECT 
* 
FROM COA_PRINCIPAL_BASE 
WHERE Rows = 1),

COA_AN_LMR AS (
SELECT
s.TEXT_ID, 
x.FILENAME, 
x.REPORTED_DATE, 
ROW_NUMBER() OVER (PARTITION BY s.TEXT_ID ORDER BY x.REPORTED_DATE DESC) AS Rows
FROM X_REPORT x INNER JOIN SAMPLE s 
ON x.SAMPLE_NUMBER = s.SAMPLE_NUMBER
WHERE x.FILENAME LIKE '%AnLMR%'), 

COA_AN_ARFD AS (
SELECT
s.TEXT_ID, 
x.FILENAME, 
x.REPORTED_DATE, 
ROW_NUMBER() OVER (PARTITION BY s.TEXT_ID ORDER BY x.REPORTED_DATE DESC) AS Rows
FROM X_REPORT x INNER JOIN SAMPLE s 
ON x.SAMPLE_NUMBER = s.SAMPLE_NUMBER
WHERE x.FILENAME LIKE '%AnARFD%'),

COAS AS (SELECT
c1.TEXT_ID AS [N° Muestra], 
c1.FILENAME AS [COA Principal], 
c2.FILENAME AS [Anexo LMR],
c3.FILENAME AS [Anexo ARFD]
FROM COA_PRINCIPAL c1 LEFT JOIN COA_AN_LMR c2 
ON c1.TEXT_ID = c2.TEXT_ID 
AND c2.Rows = 1
LEFT JOIN COA_AN_ARFD c3 
ON c1.TEXT_ID = c3.TEXT_ID 
AND c3.Rows = 1),

CODIGO_MUESTRAS AS (SELECT
    DISTINCT(TEXT_ID), 
    UPPER(TRIM(X_CLAVE_CLIENTE)) AS [X_CLAVE_CLIENTE], 
    UPPER(TRIM(X_MUESTREADOR)) AS [X_MUESTREADOR],
    UPPER(TRIM(C_CUARTEL)) AS [C_CUARTEL], 
    UPPER(TRIM(C_TURNO_CODIGO)) AS [C_TURNO_CODIGO], 
    UPPER(TRIM(C_OBS_OUT)) AS [C_OBS_OUT], 
    UPPER(TRIM(C_PARCELA_NOMBRE)) AS [C_PARCELA_NOMBRE], 
    UPPER(TRIM(C_PRODUCTOR)) AS [C_PRODUCTOR], 
    --UPPER(TRIM(C_CSOL_TIPOANALISIS)) AS [C_CSOL_TIPOANALISIS],
    --UPPER(TRIM(C_CSOL_SOLICITANTE)) AS [C_CSOL_SOLICITANTE], 
    --UPPER(TRIM(C_CSOL_P_CONGELADO)) AS [C_CSOL_P_CONGELADO], 
    --UPPER(TRIM(CSOL_PROCESO_AREA)) AS [CSOL_PROCESO_AREA], 
    UPPER(TRIM(X_CLIENTE)) AS [X_CLIENTE], 
    UPPER(TRIM(PRODUCT_GRADE)) AS Producto
FROM SAMPLE) 

SELECT 
s.*, 
STUFF(c.[COA Principal], 1, CHARINDEX('\COA', c.[COA Principal]) - 1, 'https://results.com') AS [COA Principal],
STUFF(c.[Anexo LMR], 1, CHARINDEX('\COA', c.[Anexo LMR]) - 1, 'https://results.mxns.com') AS [Anexo LMR], 
STUFF(c.[Anexo ARFD], 1, CHARINDEX('\COA', c.[Anexo ARFD]) - 1, 'https://results.mxns.com') AS [Anexo ARFD]
FROM CODIGO_MUESTRAS s LEFT JOIN COAS c 
ON s.TEXT_ID = c.[N° Muestra]







---  Query Muestras - Power BI Exportaciones Exterior  ---
WITH BASE_CLIENTE AS (SELECT
DISTINCT(s.CUSTOMER) AS Codigo,
c.COMPANY_NAME AS Cliente,
c.c_atiende_sabado AS [Sabado Habil],
CONCAT('C',c.X_CUSTOMER_CIF) AS RUC
FROM SAMPLE s LEFT JOIN CUSTOMER c
ON s.CUSTOMER = c.NAME),


PAISES_CLEAN AS (SELECT
X_CUSTOMER_PAIS AS Pais, 
COMPANY_NAME AS Cliente, 
NAME AS Codigo,
X_CUSTOMER_PROVINCIA AS Region, 
CASE
WHEN X_CUSTOMER_PAIS IN ('PE', 'PERÚ', 'PERU') THEN 'PERÚ'
WHEN X_CUSTOMER_PAIS IN ('MEXICO', 'MÉXICO') THEN 'MÉXICO'
WHEN X_CUSTOMER_PAIS = 'EC' THEN 'ECUADOR' 
WHEN X_CUSTOMER_PAIS = 'PY' THEN 'PARAGUAY'
WHEN X_CUSTOMER_PAIS = 'BO' THEN 'BOLIVIA'
WHEN X_CUSTOMER_PAIS = 'CO' THEN 'COLOMBIA'
WHEN X_CUSTOMER_PAIS = 'BE' THEN 'BÉLGICA'
WHEN X_CUSTOMER_PAIS = 'CL' THEN 'CHILE'
WHEN X_CUSTOMER_PAIS = 'IN' THEN 'INDIA'
WHEN X_CUSTOMER_PAIS = 'BO' THEN 'BOLIVIA'
WHEN X_CUSTOMER_PAIS = 'FR' THEN 'FRANCIA'
WHEN X_CUSTOMER_PAIS = 'GT' THEN 'GUATEMALA'
ELSE X_CUSTOMER_PAIS
END AS PaisClean
FROM CUSTOMER), 


PRELIMINAR AS (SELECT
b.Codigo AS [Cod. Cliente], 
b.Cliente AS Cliente, 
p.Region AS Region,
p.PaisClean AS Pais, 
b.RUC AS RUC,
b.[Sabado Habil],
ROW_NUMBER() OVER (PARTITION BY b.Codigo ORDER BY p.Region DESC) AS RowNum
FROM BASE_CLIENTE b LEFT JOIN PAISES_CLEAN p 
ON b.Cliente = p.Cliente),

FINAL AS (SELECT
[Cod. Cliente], 
Cliente, 
Region, 
Pais, 
RUC, 
[Sabado Habil]
FROM PRELIMINAR
WHERE RowNum = 1)



SELECT  
    s.TEXT_ID AS [N° Muestra], 
    c.COMPANY_NAME AS Cliente,
    s.SAMPLING_POINT AS Matriz, 
	s.DESCRIPTION,
    s.LAB AS [Lin. Negocio], 
    s.STATUS AS Estado, 
    CONVERT(DATE, s.RECD_DATE) AS FechaRecepcion, 
	f.Pais
FROM  
    SAMPLE s
    INNER JOIN CUSTOMER c ON s.CUSTOMER = c.NAME
	LEFT JOIN FINAL f ON s.CUSTOMER = f.[Cod. Cliente]
WHERE s.LAB = 'Lab A'
AND s.STATUS <> 'X'
AND f.Pais IN ('ECUADOR', 'PARAGUAY')
ORDER BY
    s.TEXT_ID ASC
-


---  Query Positivos Cadmio y Plomo  ---
-- Positivos Cadmio y Plomo --- 
WITH POSITIVOS AS (SELECT
r.REPORTED_NAME AS Metal, 
s.SAMPLING_POINT AS Matriz,
COUNT(DISTINCT(r.SAMPLE_NUMBER)) AS [Muestras Positivas]
FROM RESULT r INNER JOIN SAMPLE s
ON r.SAMPLE_NUMBER = s.SAMPLE_NUMBER
INNER JOIN X_REPORT x 
ON r.SAMPLE_NUMBER = x.SAMPLE_NUMBER
WHERE r.REPORTED_NAME IN ('Cd - Cadmio', 'Pb - Plomo')
AND r.FORMATTED_ENTRY NOT LIKE '<%'
AND s.CUSTOMER <> 'Internal ID'
AND CONVERT(DATE, x.REPORTED_DATE) >= '2023-01-01'
GROUP BY r.REPORTED_NAME, s.SAMPLING_POINT), 

TOTALES AS (
SELECT
r.REPORTED_NAME AS Metal, 
s.SAMPLING_POINT AS Matriz,
COUNT(DISTINCT(r.SAMPLE_NUMBER)) AS [Muestras Totales]
FROM RESULT r INNER JOIN SAMPLE s
ON r.SAMPLE_NUMBER = s.SAMPLE_NUMBER
INNER JOIN X_REPORT x 
ON r.SAMPLE_NUMBER = x.SAMPLE_NUMBER
WHERE r.REPORTED_NAME IN ('Cd - Cadmio', 'Pb - Plomo')
AND s.CUSTOMER <> 'Internal ID'
AND CONVERT(DATE, x.REPORTED_DATE) >= '2023-01-01'
GROUP BY r.REPORTED_NAME, s.SAMPLING_POINT)

SELECT
p.Metal, 
p.Matriz,
p.[Muestras Positivas], 
t.[Muestras Totales], 
CONCAT(ROUND(CAST(p.[Muestras Positivas] AS float)/CAST(t.[Muestras Totales] AS float)*100, 2), '%') AS Frecuencia
FROM POSITIVOS p INNER JOIN TOTALES t
ON p.Metal = t.Metal
AND p.Matriz = t.Matriz
ORDER BY p.Matriz ASC, p.Metal ASC




---  Query Promedios Muestras Recibidas Ultimos 6 Dias  ---
WITH T1 AS (SELECT  
    s.TEXT_ID AS [N° Muestra], 
    s.CUSTOMER AS [Cod. Cliente], 
    c.COMPANY_NAME AS Cliente, 
    t.ANALYSIS AS Analisis, 
    s.TEST_LIST AS [Analisis especifico],
    CONVERT(DATE, s.RECD_DATE) AS [Fecha Recepcion], 
    s.PRODUCT AS [Tipo Producto], 
    s.PRODUCT_GRADE AS Producto, 
    s.SAMPLING_POINT AS Matriz, 
    s.PROJECT AS project, 
    REPLACE(s.DESCRIPTION, ';', '') AS description, 
    s.LAB AS [Lin. Negocio], 
    s.STATUS AS sampleStatus,
    t.LAB AS testLab, 
    t.STATUS AS testStatus, 
    s.X_FECHA_INI AS x_fecha_ini, 
    s.X_FECHA_FIN AS x_fecha_fin, 
    s.RECEIVED_BY AS RecibidoPor, 
    CONVERT(DATE, s.RECD_DATE) AS FechaRecepcion, 
    NULLIF(CONVERT(DATE, r.REPORTED_DATE), '1900-01-01') AS FechaCOA, 
    s.OBSERVATIONS AS Observacion  
FROM  
    X_REPORT r 
    RIGHT JOIN SAMPLE s ON CONVERT(VARCHAR, s.REPORT_NUMBER) = r.REPORT_NUMBER
    INNER JOIN CUSTOMER c ON s.CUSTOMER = c.NAME
    INNER JOIN TEST t ON s.SAMPLE_NUMBER = t.SAMPLE_NUMBER)

SELECT
FechaRecepcion, 
[Lin. Negocio],
COUNT(DISTINCT([N° Muestra])) AS Muestras, 
AVG(COUNT(DISTINCT([N° Muestra]))) OVER (ORDER BY [Lin. Negocio], FechaRecepcion ROWS BETWEEN 5 PRECEDING AND CURRENT ROW) AS Promedio
FROM T1 
WHERE [Cod. Cliente] <> 'Internal ID'
AND testStatus <> 'X'
AND FechaRecepcion >= DATEADD(day, -6, (SELECT MAX(FechaRecepcion) FROM T1))
GROUP BY FechaRecepcion, [Lin. Negocio]
ORDER BY [Lin. Negocio], FechaRecepcion




---  Query Trazable Tiempos  ---
WITH RECEPCION AS (SELECT  
    s.SAMPLE_NUMBER,
	t.TEST_NUMBER,
	t.ANALYSIS,
	t.LAB, 
	'RECEPCION' AS ACCION,
	s.RECEIVED_BY AS RESPONSABLE,
	'' AS INSUMOS, 
	'' AS EQUIPOS,
    CONVERT(DATETIME, s.RECD_DATE) AS [FechaInicio], 
    t2.FECHA AS FechaFin
FROM  SAMPLE s LEFT JOIN TEST t 
ON s.SAMPLE_NUMBER = t.SAMPLE_NUMBER
LEFT JOIN C_LAB_TRAZABLE t2 
ON t.TEST_NUMBER = t2.TEST_NUMBER
WHERE YEAR(CONVERT(DATE, s.RECD_DATE)) >= 2023
AND t2.ACCION = 'PREPARACION QUIMICA'),

PREPARACION AS (
    SELECT
        t1.SAMPLE_NUMBER, 
		t1.TEST_NUMBER, 
		t1.ANALYSIS,
		t1.LAB,
        'PREPARACION' AS ACCION,
		t1.RESPONSABLE,
		t1.INSUMOS, 
		t1.EQUIPOS,
        t1.FECHA AS FechaInicio, 
        t2.FECHA AS FechaFin
    FROM C_LAB_TRAZABLE t1 
    LEFT JOIN C_LAB_TRAZABLE t2 ON t1.TEST_NUMBER = t2.TEST_NUMBER
    WHERE t1.ACCION = 'PREPARACION QUIMICA'
    AND t2.ACCION = 'EXTRACCION'
),


METALES AS (
    SELECT
        t1.SAMPLE_NUMBER, 
		t1.TEST_NUMBER, 
		t1.ANALYSIS,
		t1.LAB,
        t1.ACCION,
		t1.RESPONSABLE,
		t1.INSUMOS, 
		t1.EQUIPOS,
        t1.FECHA AS FechaInicio, 
        t2.FECHA AS FechaFin
    FROM C_LAB_TRAZABLE t1 
    LEFT JOIN C_LAB_TRAZABLE t2 ON t1.TEST_NUMBER = t2.TEST_NUMBER
    WHERE t1.ACCION = 'METALES'
    AND t2.ACCION = 'FIN METALES'
),

EXTRACCION AS (
    SELECT
        t1.SAMPLE_NUMBER, 
		t1.TEST_NUMBER, 
		t1.ANALYSIS,
		t1.LAB,
        t1.ACCION,
		t1.RESPONSABLE,
		t1.INSUMOS, 
		t1.EQUIPOS,
        t1.FECHA AS FechaInicio, 
        t2.FECHA AS FechaFin
    FROM C_LAB_TRAZABLE t1 
    LEFT JOIN C_LAB_TRAZABLE t2 ON t1.TEST_NUMBER = t2.TEST_NUMBER
    WHERE t1.ACCION = 'EXTRACCION'
    AND t2.ACCION = 'FIN EXTRACCION'
), 

LECTURA_METAL AS (
    SELECT
        t1.SAMPLE_NUMBER, 
		t1.TEST_NUMBER, 
		t1.ANALYSIS,
		t1.LAB,
        t1.ACCION,
		t1.RESPONSABLE,
		t1.INSUMOS, 
		t1.EQUIPOS,
        t1.FECHA AS FechaInicio, 
        t2.FECHA AS FechaFin
    FROM C_LAB_TRAZABLE t1 
    LEFT JOIN C_LAB_TRAZABLE t2 ON t1.TEST_NUMBER = t2.TEST_NUMBER
    WHERE t1.ACCION = 'Lectura'
    AND t2.ACCION = 'FIN LECTURA'
), 


LECTURA_FQ AS (
SELECT
SAMPLE_NUMBER, 
TEST_NUMBER, 
ANALYSIS, 
LAB, 
'LECTURA FQ' AS ACCION, 
'' AS RESPONSABLE, 
'' AS INSUMOS, 
'' AS EQUIPOS, 
DATE_STARTED AS FechaInicio, 
DATE_COMPLETED AS FechaFin
FROM TEST
WHERE LAB = 'Lab A'
AND DATE_STARTED IS NOT NULL
),

REVISION_FQ AS (
SELECT
SAMPLE_NUMBER, 
TEST_NUMBER, 
ANALYSIS, 
LAB, 
'REVISION FQ' AS ACCION, 
REVIEWER AS RESPONSABLE, 
'' AS INSUMOS, 
'' AS EQUIPOS, 
DATE_COMPLETED AS FechaInicio, 
DATE_REVIEWED AS FechaFin
FROM TEST
WHERE LAB = 'Lab A'
AND DATE_STARTED IS NOT NULL
),

REPORTE_METAL AS (
    SELECT
        t1.SAMPLE_NUMBER, 
		t1.TEST_NUMBER, 
		t1.ANALYSIS,
		t1.LAB,
        t1.ACCION,
		t1.RESPONSABLE,
		t1.INSUMOS, 
		t1.EQUIPOS,
        t1.FECHA AS FechaInicio, 
        t2.FECHA AS FechaFin
    FROM C_LAB_TRAZABLE t1 
    LEFT JOIN C_LAB_TRAZABLE t2 ON t1.TEST_NUMBER = t2.TEST_NUMBER
    WHERE t1.ACCION = 'REPORTE'
    AND t2.ACCION = 'FIN REPORTE'
),


REPORTE_FQ AS (SELECT
t.SAMPLE_NUMBER, 
t.TEST_NUMBER, 
t.ANALYSIS, 
t.LAB, 
'REPORTE FQ' AS ACCION, 
'' AS RESPONSABLE, 
'' AS INSUMOS, 
'' AS EQUIPOS, 
t.DATE_REVIEWED AS FechaInicio, 
MAX(x.REPORTED_DATE) AS FechaFin
FROM TEST t LEFT JOIN X_REPORT x 
ON t.SAMPLE_NUMBER = x.SAMPLE_NUMBER
WHERE LAB = 'Lab A'
AND DATE_STARTED IS NOT NULL
GROUP BY t.SAMPLE_NUMBER, 
t.TEST_NUMBER, 
t.ANALYSIS, 
t.LAB, 
t.DATE_REVIEWED),

FINAL AS (
SELECT * FROM RECEPCION 
UNION ALL 
SELECT * FROM PREPARACION 
UNION ALL
SELECT * FROM METALES
UNION ALL
SELECT * FROM EXTRACCION
UNION ALL
SELECT * FROM LECTURA_METAL
UNION ALL
SELECT * FROM REPORTE_METAL
UNION ALL 
SELECT * FROM LECTURA_FQ
UNION ALL 
SELECT * FROM REVISION_FQ
UNION ALL 
SELECT * FROM REPORTE_FQ)

SELECT
f.*, 
ISNULL(t.x_erp_citl_code, t.x_erp_ci_code) AS 'CODIGO SAP',
s.TEXT_ID AS [N° Muestra]
FROM FINAL f LEFT JOIN TEST t
ON f.TEST_NUMBER = t.TEST_NUMBER
LEFT JOIN SAMPLE s
ON s.SAMPLE_NUMBER = t.SAMPLE_NUMBER
WHERE FechaInicio IS NOT NULL 
AND FechaFin IS NOT NULL
ORDER BY f.SAMPLE_NUMBER ASC




-- Query Fact Table Turnaround Time Dashboard ----- 
WITH T1 AS (SELECT
s.TEXT_ID,
s.CUSTOMER,
s.SAMPLING_POINT,
ISNULL(t.x_erp_citl_code, t.x_erp_ci_code) AS 'CODIGO SAP',
t.ANALYSIS,
t.VARIATION, 
CASE 
	WHEN t.VARIATION LIKE '%SUP%' AND t.VARIATION NOT LIKE '%SUPERFICIE%' THEN 'SUPER' 
	WHEN t.VARIATION LIKE '%HIP%' THEN 'HIPER' 
ELSE 'REGULAR'
END AS SERVICIO,
CASE 
	WHEN s.SAMPLING_POINT = 'FORMULADOS' THEN 7
	WHEN t.VARIATION LIKE '%SUP%' AND t.VARIATION NOT LIKE '%SUPERFICIE%' THEN 1 
	WHEN t.VARIATION LIKE '%HIP%' THEN 0
	ELSE a.EXPECTED_DATE/86400 
END AS [TAT Meta],
s.RECD_DATE,
x.REPORTED_DATE
FROM SAMPLE s LEFT JOIN TEST t
ON s.SAMPLE_NUMBER = t.SAMPLE_NUMBER 
LEFT JOIN X_REPORT x
ON x.SAMPLE_NUMBER = s.SAMPLE_NUMBER
LEFT JOIN ANALYSIS a 
ON a.NAME = t.ANALYSIS
WHERE t.STATUS <> 'X' 
AND s.STATUS <> 'X'
AND a.VERSION = 1
AND ISNULL(t.x_erp_citl_code, t.x_erp_ci_code) NOT IN ('1312', '50293', '50113')
)

SELECT
TEXT_ID,
CUSTOMER,
SAMPLING_POINT,
[CODIGO SAP],
MIN(RECD_DATE) AS RECD_DATE,
MIN(REPORTED_DATE) AS REPORTED_DATE,
MIN([TAT Meta]) AS [TAT Meta],
COUNT(ANALYSIS)
FROM T1
GROUP BY TEXT_ID, CUSTOMER, SAMPLING_POINT, [CODIGO SAP]
ORDER BY TEXT_ID DESC


Query TAT Fact Table Operaciones